import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as n}from"./app-BsAv5_B3.js";const l={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="红黑树" tabindex="-1"><a class="header-anchor" href="#红黑树"><span>红黑树</span></a></h1><p>红黑树是一种自平衡的二叉搜索树,</p><h2 id="性质" tabindex="-1"><a class="header-anchor" href="#性质"><span>性质</span></a></h2><ol><li>节点为红色或黑色</li><li>空节点（空叶子节点）为黑色</li><li>红色节点的子节点为黑色</li><li>从根节点到 NIL 节点的每条路径上的黑色节点数量相同</li></ol><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//节点</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Color</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        BLACK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        RED</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    };</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Color color;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    node </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">leftChild;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    node </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rightChild;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    node </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">father;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="旋转" tabindex="-1"><a class="header-anchor" href="#旋转"><span>旋转</span></a></h2><p>红黑树有左旋和右旋,与AVL类似</p>`,8)]))}const d=s(l,[["render",t],["__file","RBT.html.vue"]]),c=JSON.parse('{"path":"/algorithm_study/search/RBT.html","title":"红黑树","lang":"zh-CN","frontmatter":{"description":"红黑树 红黑树是一种自平衡的二叉搜索树, 性质 节点为红色或黑色 空节点（空叶子节点）为黑色 红色节点的子节点为黑色 从根节点到 NIL 节点的每条路径上的黑色节点数量相同 定义 旋转 红黑树有左旋和右旋,与AVL类似","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/algorithm_study/search/RBT.html"}],["meta",{"property":"og:site_name","content":"pingter"}],["meta",{"property":"og:title","content":"红黑树"}],["meta",{"property":"og:description","content":"红黑树 红黑树是一种自平衡的二叉搜索树, 性质 节点为红色或黑色 空节点（空叶子节点）为黑色 红色节点的子节点为黑色 从根节点到 NIL 节点的每条路径上的黑色节点数量相同 定义 旋转 红黑树有左旋和右旋,与AVL类似"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-01T09:36:46.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-01T09:36:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"红黑树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-01T09:36:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"pingter\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]],"date":"2024-10-01T09:36:46.000Z"},"headers":[{"level":2,"title":"性质","slug":"性质","link":"#性质","children":[]},{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"旋转","slug":"旋转","link":"#旋转","children":[]}],"git":{"createdTime":1727775406000,"updatedTime":1727775406000,"contributors":[{"name":"pingter","email":"sy15253955056@gmail.com","commits":1}]},"readingTime":{"minutes":0.38,"words":114},"filePathRelative":"algorithm_study/search/RBT.md","localizedDate":"2024年10月1日","autoDesc":true}');export{d as comp,c as data};
